% chnage the transfer function of the plant to statespace
num = 4;
den = [1 3 4];
P = tf(num, den);

% controller requirements, the controller should have a pole at origin, s=0 
% it should have a pole at s=jw
q0 = 1/evalfr(P, 0);
q_jw = 1/evalfr(P, 10j);

% computing the coefcients of q
syms a1 a2 a3 s
% defining the q rational function
q = (a1*s^2 + a2*s + a3)/(s + 20)^2;
eqn1 = subs(q, s, 0) == q0;
eqn2 = subs(q, s, 10j) == q_jw;
eqns = [eqn1 eqn2];
vars = [a1 a2 a3];
[a1, a2, a3] = solve(eqns, vars,'Real',true);

% transfer functions of Q and controller
num = [a1 a2 a3];
% chnage num variable from symbolic to double precison
num = double(num);
% (s + 20)^2
den = [1 40 400];
q = tf(num, den)


% transfer function of the controller for stable plant
Controller_tf =q/ (1 - P*q)
Controller_tf = minreal(Controller_tf)

% system transfer function when distbance is zero equals to PC/1+PC
f = figure;
sys = P*Controller_tf/ (1 + P*Controller_tf);
step(sys)
grid on

% step disturbace reponse
f1 = figure;
sys = P/(1 + P*Controller_tf);
step(sys)
grid on

%system transfer function with sinosoidal disturbace equa;s to P/1+PC
f2 = figure;
sys = P/(1 + P*Controller_tf);
t = linspace(0, 10, 1000);
u = sin(10*t);
y = lsim(sys, u, t);
plot(t, y)
ylabel('amplitude')
xlabel('time(sec)')
title('System response for a sinusoidal')
grid on
