% define the stste representation of the system G
A = [0 0 1.132 0 -1;
     0 -0.0538 -0.1712 0 0.0705;
     0 0 0 1 0;
     0 0.0485 0 -0.8556 -1.013;
     0 -0.2909 0 1.0532 -0.6859];
 B = [0 0 0; -0.12 1 0; 0 0 0; 4.419 0 -1.665; 1.575 0 -0.0732];
 C = [1 0 0 0 0; 0 1 0 0 0;0 0 1 0 0];
 D = [0 0 0; 0 0 0; 0 0 0];
 
 % plant P
 P = ss(A, B, C, D);
 

% setting the weights
c = 1e3;
ws = 1e-4;
Ms = 1e-4;
wk = 1e2;
Mk = 0.5*1e2;

wS = tf(ws/Ms, [1 ws]);
wKS = (c/Mk)*tf([1 wk],[1 c*wk]);

% desighning  H inf controller for given weights
 [K, CL, gamma] = mixsyn(P, wS, wKS);
 gamma
 

% loop transfer function
L = P*K;
% sensitivity
S = inv(eye(3, 3) + tf(L));
% complemetary sensitivity
T = eye(3, 3) - S;

f1 = figure;
% response  to step input
stepplot(T(1, 1), T(2, 1), T(3, 1))
grid on
legend("y1", "y2", "y3")

f2 = figure;
% control sensitivity
Ks = tf(K)*S;
 
stepplot(Ks(1, 1), Ks(2, 1), Ks(3, 1))
grid on
legend("u1", "u2", "u3")

% singular values of S(s)
f3 = figure;
opts1 = sigmaoptions;
opts1.Grid = 'on';
opts1.Title.String = 'Singular Value Plot of S(s)';
sigma(S, 1/wS, opts1)
legend("\sigma", "1/Ws")

f4 = figure;
opts1 = sigmaoptions;
opts1.Grid = 'on';
opts1.Title.String = 'Singular Value Plot of KS(s)';
sigma(Ks, 1/wKS, opts1)
legend("\sigma", "1/Wk")



 
